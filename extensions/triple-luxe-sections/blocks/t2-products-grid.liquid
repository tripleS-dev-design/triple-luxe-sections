
<section id="grid-{{ block.id }}" class="t2-grid {% if block.settings.full_bleed %}t2-grid--bleed{% endif %}"
  style="
    --cols: {{ block.settings.columns }};
    --cols-md: {{ block.settings.columns_md }};
    --cols-sm: {{ block.settings.columns_sm }};
    --gap: {{ block.settings.gap }}px;
    --ratio: {{ block.settings.ratio | default: '4/5' }};
    --radius: {{ block.settings.radius }}px;
  ">
  {% if block.settings.title != blank %}
    <h3 class="t2-grid__title">{{ block.settings.title | escape }}</h3>
  {% endif %}

  {% assign coll = block.settings.collection %}
  {% assign l = block.settings.limit | default: 8 | plus: 0 %}

  <div class="t2-grid__wrap">
    {% if coll != blank and coll.products_count > 0 %}
      {% for p in coll.products limit: l %}
        {% assign price = p.price | default: p.price_min %}
        {% assign compare = p.compare_at_price | default: p.compare_at_price_max %}

        {%- comment -%} Comparaison correcte via IF {%- endcomment -%}
        {% assign has_compare = false %}
        {% if compare and price and compare > price %}
          {% assign has_compare = true %}
        {% endif %}

        {% assign available = p.available %}
        {% assign first_av = p.variants | where: 'available', true | first %}
        {% if first_av == nil %}{% assign first_av = p.variants | first %}{% endif %}

        {%- comment -%} Rating metafields (standard reviews.*) {%- endcomment -%}
        {% assign rating = nil %}
        {% assign rating_count = 0 %}
        {% if p.metafields.reviews != blank %}
          {% if p.metafields.reviews.rating and p.metafields.reviews.rating.value %}
            {% assign rating = p.metafields.reviews.rating.value %}
          {% endif %}
          {% if p.metafields.reviews.rating_count and p.metafields.reviews.rating_count.value %}
            {% assign rating_count = p.metafields.reviews.rating_count.value %}
          {% endif %}
        {% endif %}

        {% assign is_new = false %}
        {% if block.settings.badge_new_tag != blank and p.tags contains block.settings.badge_new_tag %}
          {% assign is_new = true %}
        {% endif %}

        {% assign discount_pct = 0 %}
        {% if has_compare and compare > 0 %}
          {% assign discount_pct = compare | minus: price | times: 100 | divided_by: compare | round %}
        {% endif %}

        <article class="t2-card" itemscope itemtype="http://schema.org/Product" data-product-id="{{ p.id }}">
          <meta itemprop="name" content="{{ p.title | escape }}">
          {% if p.vendor %}<meta itemprop="brand" content="{{ p.vendor | escape }}">{% endif %}

          <a class="t2-card__img" href="{{ p.url }}" aria-label="{{ p.title | escape }}" itemprop="url">
            {% assign img1 = p.featured_image %}
            {% assign img2 = nil %}
            {% if p.images and p.images.size > 1 %}
              {% assign img2 = p.images[1] %}
            {% endif %}

            {% if img1 %}
              <img
                src="{{ img1 | image_url: width: 1200 }}"
                alt="{{ p.title | escape }}"
                loading="lazy"
                class="t2-card__img-el"
                itemprop="image">
            {% else %}
              <div class="t2-card__img--ph" aria-hidden="true"></div>
            {% endif %}

            {% if block.settings.enable_hover_swap and img2 %}
              <img
                src="{{ img2 | image_url: width: 1200 }}"
                alt="{{ p.title | escape }}"
                loading="lazy"
                class="t2-card__img-el t2-card__img-el--hover">
            {% endif %}

            {% if block.settings.show_badges %}
              <div class="t2-card__badges">
                {% if is_new %}
                  <span class="t2-badge t2-badge--new">{{ block.settings.new_badge_text }}</span>
                {% endif %}
                {% if block.settings.show_discount and has_compare %}
                  <span class="t2-badge t2-badge--sale" aria-label="Promo -{{ discount_pct }}%">{{ block.settings.sale_badge_text }} -{{ discount_pct }}%</span>
                {% endif %}
              </div>
            {% endif %}

            {% unless available %}
              <div class="t2-card__soldout">{{ block.settings.sold_out_text }}</div>
            {% endunless %}
          </a>

          <div class="t2-card__meta">
            {% if block.settings.show_vendor and p.vendor != blank %}
              <div class="t2-card__vendor">{{ p.vendor }}</div>
            {% endif %}

            <a class="t2-card__name" href="{{ p.url }}" itemprop="name">{{ p.title }}</a>

            {% if block.settings.show_rating and rating %}
              {% assign stars_pct = rating | times: 20 %}
              <div class="t2-card__rating" aria-label="{{ rating }} sur 5, {{ rating_count }} avis" title="{{ rating }} / 5" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
                <span class="t2-stars"><span class="t2-stars__fg" style="width:{{ stars_pct }}%"></span></span>
                {% if rating_count > 0 %}<span class="t2-card__rating-count">({{ rating_count }})</span>{% endif %}
                <meta itemprop="ratingValue" content="{{ rating }}">
                <meta itemprop="bestRating" content="5">
                <meta itemprop="ratingCount" content="{{ rating_count }}">
              </div>
            {% endif %}

            {% if block.settings.show_price %}
              <div class="t2-card__price" itemprop="offers" itemscope itemtype="http://schema.org/Offer">
                <span class="t2-price-now" itemprop="price">{{ price | money }}</span>
                {% if block.settings.show_compare and has_compare %}
                  <span class="t2-price-compare">{{ compare | money }}</span>
                {% endif %}
                <meta itemprop="priceCurrency" content="{{ shop.currency }}">
                <link itemprop="availability" href="http://schema.org/{% if available %}InStock{% else %}OutOfStock{% endif %}">
                <meta itemprop="url" content="{{ p.url }}">
                <meta itemprop="price" content="{{ price | divided_by: 100.0 }}">
              </div>

              {%- if first_av.unit_price_measurement and first_av.unit_price -%}
                <div class="t2-card__unit">
                  <span class="t2-unit-price">{{ first_av.unit_price | money }}</span>
                  <span class="t2-unit-ref">/ {{ first_av.unit_price_measurement.reference_value }}{{ first_av.unit_price_measurement.reference_unit }}</span>
                </div>
              {%- endif -%}
            {% endif %}

            <div class="t2-card__actions">
              {% if block.settings.show_quick_add and first_av and available %}
                <form method="post" action="/cart/add" class="t2-qa" data-ajax-add="true" aria-label="Ajouter {{ p.title | escape }} au panier">
                  <input type="hidden" name="id" value="{{ first_av.id }}">
                  <button class="t2-btn t2-btn--primary" type="submit" data-qa-btn>{{ block.settings.quick_add_label }}</button>
                </form>
              {% endif %}
              <a class="t2-btn t2-btn--ghost" href="{{ p.url }}">{{ block.settings.view_label }}</a>
            </div>
          </div>
        </article>
      {% endfor %}
    {% else %}
      <div class="t2-grid__empty">Sélectionnez une collection contenant des produits.</div>
    {% endif %}
  </div>

  <div class="t2-toast" role="status" aria-live="polite" aria-atomic="true" hidden>
    <span class="t2-toast__msg">Ajouté au panier.</span>
  </div>
</section>

<style>
/* ===== Layout global ===== */
.t2-grid{ padding:12px 0; color:var(--fg,#111827) }
.t2-grid--bleed{ position:relative; left:50%; right:50%; margin-left:-50vw; margin-right:-50vw; width:100vw; max-width:100vw; }
.t2-grid__title{ margin:0 0 12px; font-weight:800; font-size:clamp(18px,2.5vw,24px) }

.t2-grid__wrap{
  display:grid;
  gap:var(--gap,16px);
  grid-template-columns:repeat(var(--cols,4), minmax(0,1fr));
}
@media (max-width: 989px){
  .t2-grid__wrap{ grid-template-columns: repeat(var(--cols-md,3), minmax(0,1fr)); }
}
@media (max-width: 639px){
  .t2-grid__wrap{ grid-template-columns: repeat(var(--cols-sm,2), minmax(0,1fr)); }
}

/* ===== Card ===== */
.t2-card{
  background:#fff; border:1px solid #e5e7eb; border-radius:var(--radius,14px);
  overflow:hidden; display:flex; flex-direction:column;
  transition: transform .18s ease, box-shadow .18s ease, border-color .18s ease;
}
.t2-card:hover{ transform:translateY(-2px); box-shadow:0 8px 22px rgba(0,0,0,.06); border-color:#e5e7eb; }

/* Image */
.t2-card__img{ display:block; position:relative; aspect-ratio:var(--ratio,4/5); background:#f7f7f7; overflow:hidden }
.t2-card__img-el{
  position:absolute; inset:0; width:100%; height:100%; object-fit:cover; transform:translateZ(0);
  transition: opacity .25s ease, transform .35s ease;
}
.t2-card__img-el--hover{ opacity:0 }
.t2-card:hover .t2-card__img-el--hover{ opacity:1 }
.t2-card:hover .t2-card__img-el{ transform:scale(1.03) }
.t2-card__img--ph{ width:100%; height:100%; background:repeating-linear-gradient(45deg,#f3f4f6,#f3f4f6 10px,#eef2f7 10px,#eef2f7 20px) }

/* Badges & Sold out */
.t2-card__badges{ position:absolute; top:10px; left:10px; display:flex; gap:6px; z-index:2 }
.t2-badge{
  display:inline-flex; align-items:center; height:24px; padding:0 10px; border-radius:999px; font-size:12px; font-weight:900;
  box-shadow:0 6px 14px rgba(0,0,0,.08); letter-spacing:.2px;
}
.t2-badge--new{ background:#111; color:#fff }
.t2-badge--sale{ background:#e11d2e; color:#fff }
.t2-card__soldout{
  position:absolute; inset:auto 10px 10px auto; background:rgba(17,24,39,.9); color:#fff; padding:6px 10px; border-radius:8px; font-weight:800; font-size:12px; z-index:2
}

/* Meta */
.t2-card__meta{ padding:12px; display:flex; flex-direction:column; gap:8px }
.t2-card__vendor{ font-size:12px; opacity:.7 }
.t2-card__name{ display:block; text-decoration:none; color:inherit; font-weight:800; line-height:1.25 }
.t2-card__name:hover{ text-decoration:underline }

/* Rating (stars) */
.t2-card__rating{ display:flex; align-items:center; gap:6px; font-size:12px }
.t2-stars{ --s:14px; position:relative; display:inline-block; width:calc(var(--s) * 5); height:var(--s); background:
  linear-gradient(90deg, #ddd 0 100%); -webkit-mask: repeat-x url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24"><path fill="black" d="M12 17.27 18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"/></svg>') left/var(--s) 1 no-repeat; }
.t2-stars__fg{ position:absolute; inset:0; background:#f59e0b }
.t2-card__rating-count{ opacity:.7 }

/* Prices */
.t2-card__price{ display:flex; gap:8px; align-items:baseline }
.t2-price-now{ font-weight:900 }
.t2-price-compare{ text-decoration:line-through; opacity:.6 }
.t2-card__unit{ font-size:12px; opacity:.8 }

/* Actions */
.t2-card__actions{ display:flex; gap:8px; align-items:center; margin-top:2px; flex-wrap:wrap }
.t2-btn{
  display:inline-flex; align-items:center; justify-content:center; border-radius:10px; padding:8px 12px; text-decoration:none; font-weight:800; letter-spacing:.2px;
  border:1px solid #e5e7eb; color:#111; background:#fff; transition: transform .15s ease, box-shadow .15s ease, background .15s ease;
}
.t2-btn--primary{ background:radial-gradient(120% 120% at 30% 20%, #ff6b6b, #e11d2e); color:#fff; border-color:transparent; box-shadow:0 10px 24px rgba(225,29,46,.35) }
.t2-btn:hover{ transform:translateY(-1px) }
.t2-btn:disabled, .t2-btn[disabled]{ opacity:.55; cursor:not-allowed }

/* Toast */
.t2-toast{
  position:fixed; left:50%; transform:translateX(-50%);
  bottom:20px; background:#111; color:#fff; padding:10px 14px; border-radius:10px; box-shadow:0 10px 24px rgba(0,0,0,.2);
  font-weight:800; z-index:60; opacity:0; pointer-events:none; transition:opacity .2s ease, transform .2s ease;
}
.t2-toast.show{ opacity:1; transform:translateX(-50%) translateY(-4px); pointer-events:auto }

/* Focus visibles */
.t2-card a:focus-visible, .t2-btn:focus-visible{ outline:2px solid #111; outline-offset:2px; border-radius:10px }
</style>

<script>
(() => {
  const root = document.getElementById("grid-{{ block.id }}");
  if (!root) return;
  const toast = root.querySelector(".t2-toast");
  const msg  = toast?.querySelector(".t2-toast__msg");

  // Progressive enhancement: AJAX Quick Add
  root.querySelectorAll("form.t2-qa[data-ajax-add='true']").forEach((form) => {
    form.addEventListener("submit", async (e) => {
      e.preventDefault();
      const btn = form.querySelector("[data-qa-btn]");
      if (!btn) return;
      const prev = btn.textContent;
      btn.disabled = true;
      btn.textContent = "Ajout...";

      try {
        const fd = new FormData(form);
        const res = await fetch("/cart/add.js", { method: "POST", body: fd, headers: { "Accept": "application/json" } });
        if (!res.ok) throw new Error("HTTP " + res.status);
        const data = await res.json();

        if (toast) {
          const title = (data?.title) ? data.title : "{{ 'Ajouté au panier' | escape }}";
          if (msg) msg.textContent = `${title} — ajouté au panier`;
          toast.hidden = false;
          toast.classList.add("show");
          setTimeout(() => toast.classList.remove("show"), 1800);
        }
      } catch (err) {
        if (toast) {
          if (msg) msg.textContent = "Impossible d'ajouter. Réessayez.";
          toast.hidden = false;
          toast.classList.add("show");
          setTimeout(() => toast.classList.remove("show"), 2000);
        }
        console.error(err);
      } finally {
        btn.disabled = false;
        btn.textContent = prev;
      }
    }, { passive: false });
  });
})();
</script>

{% schema %}
{
  "name": "TLX Products Grid PRO",
  "target": "section",
  "settings": [
    { "type": "text", "id": "title", "label": "Titre", "default": "Produits populaires" },
    { "type": "collection", "id": "collection", "label": "Collection" },
    { "type": "range", "id": "limit", "label": "Nombre d'articles", "min": 2, "max": 20, "step": 1, "default": 8 },

    { "type": "range", "id": "columns", "label": "Colonnes desktop", "min": 2, "max": 6, "step": 1, "default": 4 },
    { "type": "range", "id": "columns_md", "label": "Colonnes tablette", "min": 2, "max": 4, "step": 1, "default": 3 },
    { "type": "range", "id": "columns_sm", "label": "Colonnes mobile", "min": 1, "max": 3, "step": 1, "default": 2 },
    { "type": "range", "id": "gap", "label": "Espace (px)", "min": 6, "max": 28, "step": 1, "default": 16 },
    { "type": "select", "id": "ratio", "label": "Ratio image", "default": "4/5",
      "options": [
        { "value": "4/5",  "label": "4:5 (portrait)" },
        { "value": "1/1",  "label": "1:1 (carré)" },
        { "value": "3/4",  "label": "3:4" },
        { "value": "16/9", "label": "16:9 (paysage)" }
      ]
    },
    { "type": "range", "id": "radius", "label": "Rayon des cartes (px)", "min": 0, "max": 24, "step": 1, "default": 14 },
    { "type": "checkbox", "id": "full_bleed", "label": "Bord à bord (100vw)", "default": false },

    { "type": "checkbox", "id": "show_price", "label": "Afficher le prix", "default": true },
    { "type": "checkbox", "id": "show_compare", "label": "Afficher le prix barré si promo", "default": true },
    { "type": "checkbox", "id": "show_vendor", "label": "Afficher le vendeur", "default": false },

    { "type": "checkbox", "id": "enable_hover_swap", "label": "Swap image au survol (si 2 images)", "default": true },
    { "type": "checkbox", "id": "show_badges", "label": "Afficher les badges", "default": true },
    { "type": "checkbox", "id": "show_discount", "label": "Afficher le % remise", "default": true },
    { "type": "text", "id": "badge_new_tag", "label": "Tag pour badge Nouveau", "default": "new" },
    { "type": "text", "id": "new_badge_text", "label": "Texte badge Nouveau", "default": "Nouveau" },
    { "type": "text", "id": "sale_badge_text", "label": "Texte badge Promo", "default": "Promo" },
    { "type": "text", "id": "sold_out_text", "label": "Texte Rupture", "default": "Rupture" },

    { "type": "checkbox", "id": "show_rating", "label": "Afficher la note (metafields)", "default": false },

    { "type": "checkbox", "id": "show_quick_add", "label": "Bouton Ajouter au panier", "default": true },
    { "type": "text", "id": "quick_add_label", "label": "Libellé Ajouter", "default": "Ajouter" },
    { "type": "text", "id": "view_label", "label": "Libellé Voir", "default": "Voir" }
  ]
}
{% endschema %}
